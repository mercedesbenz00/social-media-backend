server:
  port: ${PORT:8080}
  auth:
    secret: ${SECRET_KEY:EkQCe8jwME187iyzqpxNPUlwu9MaMkXY}

social:

  # URL prefix for all controllers in the service
  #  url-prefix: notification-service
  appId: ${MATRIX_APP_ID:social.media}
  openid:
    key-id: A285DC6845EC6F04415FB60D6A70EC2F9D192AE0
    jwks-url: https://account4.shabakaty.com/core/.well-known/openid-configuration/jwks
    access-token-header-name: access-token
    role-claim-name: socialnetwork.role

  notificationservice:
    last-notifications-interval-days: 1

    notification:
      # Cleanup notifications every day at 3 am (production)
      cleanup:
        # every 15 min (for dev env)
        cron: ${NOTIFICATIONS_CLEANUP_CRON:0 */15 * * * ?}
        # Every day at 3 am - for production
        # cron: "0 0 3 * * ?"
    persontoken:
      deleteAfterDays: ${DELETE_AFTER_DAYS:60}
      cleanup:
        # every day at midnight
        cron: ${PERSONTOKENS_CLEANUP_CRON:0 0 0 * * ?}
  job:
    fixedDelay: "60000"
    initialDelay: "120000"

spring:
  application:
    name: notification-service
  main:
    allow-bean-definition-overriding: true
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: notification-service
      auto-offset-reset: earliest
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASS:guest}
    database: ${REDIS_DB:0}

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/notification_service}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:earthlink}
    password: ${DB_PASSWORD:example}
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  jackson:
    serialization:
      write_dates_as_timestamps: true
  mail:
    from: ${SMTP_FROM:creativeadvtechnologies@gmail.com}
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:creativeadvtechnologies@gmail.com}
    password: ${SMTP_PASSWORD:fmzrvluvaphjkwby}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# push token for firebase c7Rswn62fwQ:APA91bG4csMi_89vYVMDLiPWdb5To4PDsvybs7J0WjW4kX1Xy3c9BCVEiQTklqGJbolv3VA0eAIsyRhq0__kdNapYpLtkA1KOMwa-t5i5J9DtgXOnsl0OyujOviFRs2NuVC1w0mjc3Vb
app:
  firebase-configuration-file: firebase.json
  notifications:
    defaults: { topic: 'common', title: 'Common topic - Hello', message: 'Sending test message \uD83D\uDE42', token: 'ss22t03wz208eg:APA2idkkow223FE_0v5yHxqCLTyxAQafj6nWaqi4QzwZTW004q1PUux63UsFN', payloadMessageId: '123', payloadData: 'Hello. This is payload content.' }
web:
  cors:
    allowedOrigins: ${ALLOWED_ORIGINS:*}
    allowedHeaders: ${ALLOWED_HEADERS:*}
    allowedMethods: ${ALLOWED_METHODS:*}
    allowCredentials: ${ALLOWED_CREDENTIALS:false}

management:
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: ['health', 'metrics', 'prometheus']
  metrics:
    export:
      prometheus:
        enabled: true
        pushgateway:
          enabled: true

feign:
  client:
    config:
      default:
        connect-timeout: 60000
        read-timeout: 60000
        loggerLevel: FULL

post:
  service:
    url: ${POST_SERVICE_URL:http://localhost:8083}

person:
  service:
    url: ${PERSON_SERVICE_URL:http://localhost:8081}

group:
  service:
    url: ${GROUP_SERVICE_URL:http://localhost:8082}

sentry:
  dsn: ${SENTRY_DSN:https://5807e19a3a2943f6862270d23262508f@o4505390493073408.ingest.sentry.io/4505390512340992}
  environment: ${SENTRY_ENVIRONMENT:local}