{
	"info": {
		"_postman_id": "760567a9-0340-48c7-b163-9a89ea547be9",
		"name": "Social Media App",
		"description": "The Creative Advanced Tech \"Social Media Application\" collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2717555"
	},
	"item": [
		{
			"name": "person-service",
			"item": [
				{
					"name": "Person API",
					"item": [
						{
							"name": "Register (with required fields)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{     \n    \"email\": \"myoda@mailinator.com\",\n    \"password\": \"{{auth.password}}\",\n    \"confirmPassword\": \"{{auth.password}}\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Pedro\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1990-01-01\",\n    \"captchaResponse\": \"response\",\n    \"siteKey\": \"6LfJ8pojAAAAABfK8xpudL1NW9oFDAtoEfcxfS_I\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/register",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register (with optional fields)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{     \n    \"email\": \"myoda@mailinator.com\",\n    \"password\": \"{{auth.password}}\",\n    \"confirmPassword\": \"{{auth.password}}\",\n    \"firstName\": \"Minch\",\n    \"lastName\": \"Yoda\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1990-01-01\",\n    \"displayName\": \"The Yoda\",\n    \"cityId\": 1 \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/register",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm email",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/email/confirm?email={{auth.username}}&code=721665",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"email",
										"confirm"
									],
									"query": [
										{
											"key": "email",
											"value": "{{auth.username}}",
											"description": "Email that should be confirm"
										},
										{
											"key": "code",
											"value": "721665",
											"description": "Code from confirmation email"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend confirmation email",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{auth.username}}\",\n    \"captchaResponse\": \"response\",\n    \"siteKey\": \"6LfJ8pojAAAAABfK8xpudL1NW9oFDAtoEfcxfS_I\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/email/resend",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"email",
										"resend"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{auth.username}}\",\n    \"password\": \"{{auth.password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/login",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login via Facebook",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessToken\": \"EAASTB58wvZBUBAO1sey9C1N9ni9JS3U6X8BZCSr02LYaNyQQWSSTdZBSbOZCbCeU7VjCscCt1USUorafKG8aTlNPMkpNkO4ZBV86PmZBZBZBb4dueQTX8ZC1H1ZCI8oeIbakt9zQvpnuj644ZAqlSXLqXneNI7l4zLEYBLBwyxTsNuiAwO7pjGiayZA1IwBAcTLzBT1QnZBKv6QZAfROjxnO9VZCskI\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/login/facebook",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"login",
										"facebook"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login via Google",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessToken\": \"EAASTB58wvZBUBAO1sey9C1N9ni9JS3U6X8BZCSr02LYaNyQQWSSTdZBSbOZCbCeU7VjCscCt1USUorafKG8aTlNPMkpNkO4ZBV86PmZBZBZBb4dueQTX8ZC1H1ZCI8oeIbakt9zQvpnuj644ZAqlSXLqXneNI7l4zLEYBLBwyxTsNuiAwO7pjGiayZA1IwBAcTLzBT1QnZBKv6QZAfROjxnO9VZCskI\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/login/google",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"login",
										"google"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login via Apple",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessToken\": \"cc2f758b3b79248a2b20e7ae82d92e7e5.0.rrvuz.cLcYNWpZLlOTY3VJbDch7A\",\n    \"firstName\": \"FirstName\",\n    \"lastName\": \"LatName\",\n    \"clientId\": \"com.creative.earthlinksocial\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/login/apple",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"login",
										"apple"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/logout",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh Token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{refresh.token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/token/refresh",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"token",
										"refresh"
									]
								}
							},
							"response": []
						},
						{
							"name": "Forgot password",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user_1@example.com\",\n    \"captchaResponse\": \"response\",\n    \"siteKey\": \"6LfJ8pojAAAAABfK8xpudL1NW9oFDAtoEfcxfS_I\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/forgot-password",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"forgot-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset password",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user_1@example.com\",\n    \"code\":290983,\n    \"password\":1988181818,\n    \"confirmationPassword\": 1988181818\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/reset-password",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"reset-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change password",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"{{auth.password}}\",\n    \"password\": \"Qwerty!\",\n    \"confirmPassword\": \"Qwerty!\"\n}\n/*\n{\n    \"oldPassword\": \"Qwerty!\",\n    \"password\": \"{{auth.password}}\",\n    \"confirmPassword\": \"{{auth.password}}\"\n}\n*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/change-password",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"change-password"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user config",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/config",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update user config",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notificationMute\": true,\n    \"story\": {\n        \"accessType\": \"SELECTED_FOLLOWERS\",\n        \"allowedFollowersIds\": [\n            10\n        ]\n    },\n    \"localization\": \"EN\",\n    \"theme\": \"DARK\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/config",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"config"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/profile",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"profile"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user information (by userId)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/by-id/:personId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"by-id",
										":personId"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user information (by username)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/by-name/:username",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"by-name",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "Luke.Skywalker.123"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Check username",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/check-username?username=Luke.Skywalker.123",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"check-username"
									],
									"query": [
										{
											"key": "username",
											"value": "Luke.Skywalker.123"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update user information (by userId)",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"Luke.Skywalker.123\", \n    \"firstName\": \"Luke\",\n    \"lastName\": \"Skywalker\",\n    \"gender\": \"MALE\",\n    \"birthDate\": \"1990-01-01\",\n    \"displayName\": \"skyluke\",\n    \"cityId\": 1\n}\n\n/* {\n    \"isVerifiedAccount\": true\n} */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId"
									],
									"query": [
										{
											"key": "onboarding",
											"value": "true",
											"description": "(Optional). Indicates if person registration state should be updated during onboarding. Default value is false.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "personId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons?page=0&size=20",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										},
										{
											"key": "query",
											"value": "",
											"description": "Filters persons by first or last names matching query pattern",
											"disabled": true
										},
										{
											"key": "displayNameQuery",
											"value": "",
											"description": "Filters persons by display names matching displayNameQuery pattern",
											"disabled": true
										},
										{
											"key": "personIds",
											"value": "1,2",
											"description": "(Optional) Filter persons by specifies personIds.",
											"disabled": true
										},
										{
											"key": "followingsFirst",
											"value": "true",
											"disabled": true
										},
										{
											"key": "groupIds",
											"value": "1,2",
											"description": "(Optional) Filter persons by group membership. If both personIds and groupIds filters are specified, groupIds filter takes precedence.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find users - admin",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/info?page=0&size=20",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"info"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										},
										{
											"key": "query",
											"value": "",
											"description": "Filters persons by first or last names matching query pattern",
											"disabled": true
										},
										{
											"key": "displayNameQuery",
											"value": "",
											"description": "Filters persons by display names matching displayNameQuery pattern",
											"disabled": true
										},
										{
											"key": "personIds",
											"value": "1,2",
											"description": "(Optional) Filter persons by specifies personIds.",
											"disabled": true
										},
										{
											"key": "followingsFirst",
											"value": "true",
											"disabled": true
										},
										{
											"key": "groupIds",
											"value": "1,2",
											"description": "(Optional) Filter persons by group membership. If both personIds and groupIds filters are specified, groupIds filter takes precedence.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find users with complaints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/search/with-complaints?complaintState=PENDING&page=0&size=20&personStatus=ANY&fromDate=2021-01-01&toDate=2023-12-01",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"search",
										"with-complaints"
									],
									"query": [
										{
											"key": "complaintState",
											"value": "PENDING",
											"description": "Optional. Default value - PENDING. Valid values are PENDING, REJECTED, USER_BANNED_GROUP, USER_BANNED."
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "20"
										},
										{
											"key": "query",
											"value": "admin",
											"description": "Optional. Filters persons by display names matching query pattern",
											"disabled": true
										},
										{
											"key": "personStatus",
											"value": "ANY",
											"description": "User ban status: ACTIVE, BANNED, ANY"
										},
										{
											"key": "fromDate",
											"value": "2021-01-01",
											"description": "Complaint created date from"
										},
										{
											"key": "toDate",
											"value": "2023-12-01",
											"description": "Complaint created date to"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user avatar",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/avatar",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"avatar"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update user avatar",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/avatar",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"avatar"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete user avatar",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/avatar",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"avatar"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user cover",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/cover",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"cover"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update user cover",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/cover",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"cover"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete user cover",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/cover",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"cover"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite friend",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"jsmith@example.com\",\n    \"name\":\"John Smith\",\n    \"captchaResponse\": \"response\",\n    \"siteKey\": \"6LfJ8pojAAAAABfK8xpudL1NW9oFDAtoEfcxfS_I\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/invite-friend",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"invite-friend"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate Profile",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons?force=",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons"
									],
									"query": [
										{
											"key": "force",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Request to change email",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"newEmail\": \"new.email@example.com\",\r\n    \"captchaResponse\": \"response\",\r\n    \"siteKey\": \"6LfJ8pojAAAAABfK8xpudL1NW9oFDAtoEfcxfS_I\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/email/request",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"email",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update email",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"oldEmail\": \"old.email@example.com\",\r\n    \"newEmail\":\"new.email@example.com\",\r\n    \"token\":583867\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/email/update",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"email",
										"update"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Follow API",
					"item": [
						{
							"name": "V2",
							"item": [
								{
									"name": "Follow person",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{person-service}}/api/v2/persons/:personId/follow",
											"host": [
												"{{person-service}}"
											],
											"path": [
												"api",
												"v2",
												"persons",
												":personId",
												"follow"
											],
											"variable": [
												{
													"key": "personId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Unfollow person",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{person-service}}/api/v2/persons/:personId/follow",
											"host": [
												"{{person-service}}"
											],
											"path": [
												"api",
												"v2",
												"persons",
												":personId",
												"follow"
											],
											"variable": [
												{
													"key": "personId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find followers (by userId)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{person-service}}/api/v2/persons/:personId/followers?page=0&size=10",
											"host": [
												"{{person-service}}"
											],
											"path": [
												"api",
												"v2",
												"persons",
												":personId",
												"followers"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "followerIds",
													"value": "2",
													"description": "(Optional) Filter followers by specified followerIds.",
													"disabled": true
												},
												{
													"key": "query",
													"value": "Luke",
													"description": "The query parameter filters followers by firstName, lastName or displayName",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "personId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find following (by userId)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{person-service}}/api/v2/persons/:personId/following?page=0&size=10",
											"host": [
												"{{person-service}}"
											],
											"path": [
												"api",
												"v2",
												"persons",
												":personId",
												"following"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "followingIds",
													"value": "48,46",
													"description": "(Optional) Filter following by specified followingIds.",
													"disabled": true
												},
												{
													"key": "query",
													"value": "Luke",
													"description": "The query parameter filters following by firstName, lastName or displayName",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "personId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Follow person",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/follow",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"follow"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unfollow person",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/follow",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"follow"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find followers (by userId)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/followers?page=0&size=10",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"followers"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "followerIds",
											"value": "4,2",
											"description": "(Optional) Filter followers by specified followerIds.",
											"disabled": true
										},
										{
											"key": "query",
											"value": "Luke",
											"description": "The query parameter filters followers by firstName, lastName or displayName",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find following (by userId)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/following?page=0&size=10",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"following"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "followingIds",
											"value": "48,46",
											"description": "(Optional) Filter following by specified followingIds.",
											"disabled": true
										},
										{
											"key": "query",
											"value": "Luke",
											"description": "The query parameter filters following by firstName, lastName or displayName",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Mute API",
					"item": [
						{
							"name": "Mute user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/mutes",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"mutes"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unmute user",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/mutes",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"mutes"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find mutes (by userId)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/mutes?page=0&size=10",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"mutes"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Ban / Block API",
					"item": [
						{
							"name": "Block user",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/blocks",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"blocks"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock user",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/blocks",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"blocks"
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find blocks (by userId)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/:personId/blocks?page=0&size=10",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										":personId",
										"blocks"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									],
									"variable": [
										{
											"key": "personId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Ban",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"personId\" : 2,\n    \"reasonId\": 1,\n    \"reason\": \"\",\n    \"days\": 3\n }\n\n /* reasonId - Predefined reason ID;\n   reason - Custom reason. */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Group Bans",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"personId\" : 2,\n    \"reasonId\": 1,\n    \"reason\": \"\",\n    \"days\": 3,\n    \"groupIds\": [1,2,3]\n }\n\n /* reasonId - Predefined reason ID;\n   reason - Custom reason. */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/groupBans",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										"groupBans"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Bans",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans?personId=101&query=Cr&active=true",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans"
									],
									"query": [
										{
											"key": "personId",
											"value": "101",
											"description": "(Optional) For getting the ban information by id of the banned person"
										},
										{
											"key": "query",
											"value": "Cr",
											"description": "(Optional) Filters bans by the person first, last, or display name matching the query."
										},
										{
											"key": "active",
											"value": "true",
											"description": "(Optional) If true, returns active bans. Default - true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Group Bans",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/groupBans?groupIds=1,2&active=true",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										"groupBans"
									],
									"query": [
										{
											"key": "personIds",
											"value": "2,4",
											"description": "(Optional) For getting the ban information by ids of the banned persons",
											"disabled": true
										},
										{
											"key": "query",
											"value": "Cr",
											"description": "(Optional) Filters bans by the person first, last, or display name matching the query.",
											"disabled": true
										},
										{
											"key": "groupIds",
											"value": "1,2",
											"description": "(Required) Filter bans by specified groupIds."
										},
										{
											"key": "active",
											"value": "true",
											"description": "(Optional) If true, returns active bans. Default - true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Ban",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"days\" : 2,        \r\n    \"reason\": \"Wrong Usage\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/:banId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										":banId"
									],
									"variable": [
										{
											"key": "banId",
											"value": "17"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Group Ban",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"days\" : 2,        \r\n    \"reason\": \"Wrong Usage\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/groupBans/:groupBanId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										"groupBans",
										":groupBanId"
									],
									"variable": [
										{
											"key": "groupBanId",
											"value": "17"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Ban",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/:banId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										":banId"
									],
									"variable": [
										{
											"key": "banId",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Group Ban",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/groupBans/:groupBanId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										"groupBans",
										":groupBanId"
									],
									"variable": [
										{
											"key": "groupBanId",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find My Group Bans",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/bans/my-group-bans?groupId=1",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"bans",
										"my-group-bans"
									],
									"query": [
										{
											"key": "groupId",
											"value": "1",
											"description": "Required. User group Id to check if current user is banned from this group."
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Complaint API",
					"item": [
						{
							"name": "Create complaint",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reasonId\": 1,\n    \"reason\": \"\",\n    \"personId\": 1,\n    \"userGroupId\": 1\n}\n\n/* reasonId - Predefined reason ID;\n   reason - Custom reason. */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/complaints",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"complaints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Moderate complaint",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/complaints/:complaintId/reject?reason=",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"complaints",
										":complaintId",
										"reject"
									],
									"query": [
										{
											"key": "reason",
											"value": "",
											"description": "The reason why complaint should be rejected"
										},
										{
											"key": "resolveAll",
											"value": "false",
											"description": "To reject other complaints as well. Default value is \"true\"",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "complaintId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete complaint",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/complaints/:complaintId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"complaints",
										":complaintId"
									],
									"variable": [
										{
											"key": "complaintId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find complaints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/complaints?page=0&size=10",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"complaints"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "groupIds",
											"value": "1,2",
											"description": "Filter complaints by group IDs",
											"disabled": true
										},
										{
											"key": "personIds",
											"value": "3,4",
											"description": "Filter complaints by reported person IDs",
											"disabled": true
										},
										{
											"key": "state",
											"value": "REJECTED",
											"description": "Optional. Default value - PENDING. Valid values - PENDING, REJECTED, USER_BANNED_GROUP, USER_BANNED.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Statistics API",
					"item": [
						{
							"name": "Get user statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{person-service}}/api/v1/stats",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"stats"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "2021-12-27",
											"description": "Returns user statistics data after specified date. Optional",
											"disabled": true
										},
										{
											"key": "timeInterval",
											"value": "DAY",
											"description": "Time interval for which statistical results are calculated - DAY, MONTH, or YEAR.  Default value - MONTH",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notifications Settings Api",
					"item": [
						{
							"name": "Get All Notifications Settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/notification-settings?page=0&size=10&followingIds=",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"notification-settings"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "followingIds",
											"value": "",
											"description": "Filter by followingIds"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Notifications Settings by followingId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{person-service}}/api/v1/persons/notification-settings/:followingId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"notification-settings",
										":followingId"
									],
									"variable": [
										{
											"key": "followingId",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Notifications Settings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isMuted\": false\n}"
								},
								"url": {
									"raw": "{{person-service}}/api/v1/persons/notification-settings/:followingId",
									"host": [
										"{{person-service}}"
									],
									"path": [
										"api",
										"v1",
										"persons",
										"notification-settings",
										":followingId"
									],
									"variable": [
										{
											"key": "followingId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get cities",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{person-service}}/api/v1/cities",
							"host": [
								"{{person-service}}"
							],
							"path": [
								"api",
								"v1",
								"cities"
							],
							"query": [
								{
									"key": "query",
									"value": "York",
									"description": "The query param allows find cities matched by name",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Service health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{person-service}}/actuator/health",
							"host": [
								"{{person-service}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "group-service",
			"item": [
				{
					"name": "Category API",
					"item": [
						{
							"name": "Find categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "en",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{group-service}}/api/v1/categories?page=0&size=10",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "parentCategoryId",
											"value": "1",
											"description": "Filters categories that have parent category. If not specified - returns only root categories.",
											"disabled": true
										},
										{
											"key": "personId",
											"value": "4",
											"description": "Filters categories interested by the person",
											"disabled": true
										},
										{
											"key": "query",
											"value": "teg",
											"description": "The query param allows find categories matched by name",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "skipUnusedInGroups",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "en",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{group-service}}/api/v1/categories/search?page=0&size=1000&skipParent=false",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										"search"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "query",
											"value": "teg",
											"description": "The query param allows find categories matched by name",
											"disabled": true
										},
										{
											"key": "size",
											"value": "1000"
										},
										{
											"key": "skipParent",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create category",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Category 1\",\n    \"localizations\": {\n        \"ar\": \"Arabic name\"\n    }\n}\n\n/*\n{\n    \"name\": \"Child Category 1\",\n    \"description\": \"Child Description 1\",\n    \"parentCategoryId\": 2\n}\n*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/categories",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept-Language",
										"value": "en",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "158"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update category",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Category 1 (updated)\",\n    \"localizations\": {\n        \"ar\": \"Arabic updated\"\n    }\n}\n\n/*\n{\n    \"name\": \"Child Category 1 (updated)\",\n    \"description\": \"Child Description 1 (updated)\",\n    \"parentCategoryId\": 3\n}\n*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "158"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete category",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign categories to the user",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/categories/persons?categoryIds=1,2",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										"persons"
									],
									"query": [
										{
											"key": "categoryIds",
											"value": "1,2",
											"description": "(Required) List of category IDs to be assigned to the user"
										},
										{
											"key": "onboarding",
											"value": "true",
											"description": "(Optional). Indicates if categories are being assigned during person registration. Default value is false.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category avatar",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId/avatar",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId",
										"avatar"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update category avatar",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId/avatar",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId",
										"avatar"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete category avatar",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId/avatar",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId",
										"avatar"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category cover",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId/cover",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId",
										"cover"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update category cover",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId/cover",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId",
										"cover"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete category cover",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/categories/:categoryId/cover",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"categories",
										":categoryId",
										"cover"
									],
									"variable": [
										{
											"key": "categoryId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tag API",
					"item": [
						{
							"name": "Create tag",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/tags?name=tag_1",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"tags"
									],
									"query": [
										{
											"key": "name",
											"value": "tag_1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get tag",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/tags/:tagId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										":tagId"
									],
									"variable": [
										{
											"key": "tagId",
											"value": "21"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete tag",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/tags/:tagId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"tags",
										":tagId"
									],
									"variable": [
										{
											"key": "tagId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find tags",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/tags?page=0&size=10&query=1",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"tags"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "query",
											"value": "1",
											"description": "Filter tags by name"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Group API",
					"item": [
						{
							"name": "Create group",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Group 1\",\n    \"description\": \"Group description\",\n    \"rules\": \"Group rules are ...\",\n    \"categories\": [2],\n    \"accessType\": \"PUBLIC\",\n    \"visibility\": \"EVERYONE\" \n}\n/* \"accessType\": \"PRIVATE\" (\"PUBLIC\"),\n\"visibility\": \"INVITED\" (\"EVERYONE\"),\n\"postingPermission\": \"ALL\" (\"ADMIN_ONLY\", \"WITH_APPROVAL\"),\n\"invitePermission\": \"ADMIN\" (\"MEMBER\")\n */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/groups",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite user to the group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/invite/:userId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"invite",
										":userId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										},
										{
											"key": "userId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update group",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Group 1 (updated1)\",\n    \"description\": \"Group description  (updated)\",\n    \"rules\": \"Group rules are ... (updated)\",\n    \"categories\": [3, 4],\n    \"tags\": [1],\n    \"accessType\": \"PUBLIC\",\n    \"state\": \"APPROVED\",\n    \"visibility\": \"EVERYONE\" ,\n    \"postingPermission\": \"ADMIN_ONLY\"\n}\n/*\n\"state\": \"PENDING, APPROVED, or REJECTED\",\naccesstype\": \"PRIVATE\",\n\"visibility\": \"INVITED\",\n\"postingPermission\": \"ALL\" (\"ADMIN_ONLY\", \"WITH_APPROVAL\"),\n\"invitePermission\": \"ADMIN\" (\"MEMBER\")\n*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups?page=0&size=10&states=PENDING, APPROVED, REJECTED",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "query",
											"value": "est",
											"description": "(Optional) Filters groups if the name matched by the 'query' parameter",
											"disabled": true
										},
										{
											"key": "groupIds",
											"value": "1,6,4",
											"description": "(Optional) Filters groups by the list of Group IDs",
											"disabled": true
										},
										{
											"key": "categoryIds",
											"value": "8",
											"description": "(Optional) Filters groups by the list of Category IDs",
											"disabled": true
										},
										{
											"key": "states",
											"value": "PENDING, APPROVED, REJECTED",
											"description": "(Optional) Filters groups by state: PENDING, APPROVED, REJECTED"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find my groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/my-groups?page=0&size=10&sort=publishedPostsCount,desc&memberStates=INVITED, APPROVED",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"my-groups"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "query",
											"value": "name",
											"description": "(Optional) Filters groups if the name matched by the 'query' parameter",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "publishedPostsCount,desc"
										},
										{
											"key": "memberStates",
											"value": "INVITED, APPROVED",
											"description": "(Optional) Filter by group member state. Allowed options: APPROVED, PENDING, REJECTED, INVITED"
										},
										{
											"key": "memberStatus",
											"value": "MODERATOR",
											"description": "(Optional) Filter by group member status. Allowed options: ADMIN, MODERATOR, USER",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find similar groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/similar?page=0&size=10",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"similar"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find suggested groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/suggested?page=0&size=10",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"suggested"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find top groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/top?page=0&size=10",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"top"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find popular groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/popular?page=0&size=10",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"popular"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find frequently posts groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/frequently-posts",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"frequently-posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find groups by states",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/states?page=0&size=10&states=PENDING, APPROVED, REJECTED",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"states"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "states",
											"value": "PENDING, APPROVED, REJECTED",
											"description": "(Optional) Filters groups by group states: PENDING, APPROVED, REJECTED"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get persons to tag",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/persons-to-tag?query=sky",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"persons-to-tag"
									],
									"query": [
										{
											"key": "query",
											"value": "sky",
											"description": "(Optional) Filters group members by display names matching query pattern"
										}
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group member (state)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/members/:memberId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"members",
										":memberId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										},
										{
											"key": "memberId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group members",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/members",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"members"
									],
									"query": [
										{
											"key": "query",
											"value": "sky",
											"description": "(Optional) Filters group members by display names matching query pattern",
											"disabled": true
										},
										{
											"key": "states",
											"value": "APPROVED,PENDING",
											"description": "(Optional) filter by group member state. Allowed options: APPROVED, PENDING, REJECTED",
											"disabled": true
										},
										{
											"key": "memberIds",
											"value": "99, 109",
											"description": "(Optional) filter by group member Ids",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "groupId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get mutual friends in group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/mutual-friends",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"mutual-friends"
									],
									"query": [
										{
											"key": "query",
											"value": "sky",
											"description": "(Optional) Filters group members by display names matching query pattern",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update group member state",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/members/:memberId?state=APPROVED",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"members",
										":memberId"
									],
									"query": [
										{
											"key": "state",
											"value": "APPROVED",
											"description": "Valid values are: PENDING, APPROVED, REJECTED"
										}
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										},
										{
											"key": "memberId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Join group",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/members",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"members"
									],
									"query": [
										{
											"key": "onboarding",
											"value": "true",
											"description": "(Optional). Indicates if group is being joined during person registration. Default value is false.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Leave group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/members",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"members"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add permission",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"personId\": 5,\n    \"permission\": \"MODERATOR\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/permissions",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"permissions"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove permission",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/permissions/:permissionId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"permissions",
										":permissionId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										},
										{
											"key": "permissionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find group permissions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/permissions",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"permissions"
									],
									"query": [
										{
											"key": "groupIds",
											"value": "1,2",
											"description": "(Optional) Filters by groups. Optional if personId is specified",
											"disabled": true
										},
										{
											"key": "personId",
											"value": "1",
											"description": "(Optional) Filters by Person. Optional if groupId is specified",
											"disabled": true
										},
										{
											"key": "statuses",
											"value": "ADMIN, MODERATOR",
											"description": "(Optional) Filter by group roles",
											"disabled": true
										},
										{
											"key": "query",
											"value": "gr",
											"description": "(Optional) Filter by group name query",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group avatar",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/avatar",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"avatar"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update group avatar",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/avatar",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"avatar"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete group avatar",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/avatar",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"avatar"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group cover",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/cover",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"cover"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update group cover",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/cover",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"cover"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete group cover",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/:groupId/cover",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":groupId",
										"cover"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Group Statistics API",
					"item": [
						{
							"name": "Get group statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/stats",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"stats"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "2021-12-27",
											"description": "Returns group statistics data after specified date. Optional",
											"disabled": true
										},
										{
											"key": "timeInterval",
											"value": "DAY",
											"description": "Time interval for which statistical results are calculated - DAY, MONTH, or YEAR.  Default value - MONTH",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get category statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/stats/category",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"stats",
										"category"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "2021-12-27",
											"description": "Returns group category statistics after specified date. Optional",
											"disabled": true
										},
										{
											"key": "timeInterval",
											"value": "DAY",
											"description": "Time interval for which statistical results are calculated - DAY, MONTH, or YEAR.  Default value - MONTH",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Group Notification Settings Api",
					"item": [
						{
							"name": "Get all group notification settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/notification-settings?page=0&size=10&groupIds=",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"notification-settings"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "groupIds",
											"value": "",
											"description": "Filter by groupIds"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group notification settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{group-service}}/api/v1/groups/notification-settings/:groupId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"notification-settings",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set group notification settings",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"isMuted\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{group-service}}/api/v1/groups/notification-settings/:groupId",
									"host": [
										"{{group-service}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										"notification-settings",
										":groupId"
									],
									"variable": [
										{
											"key": "groupId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "post-service",
			"item": [
				{
					"name": "Post API",
					"item": [
						{
							"name": "V2",
							"item": [
								{
									"name": "Create post",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "data",
													"value": "{ \n   \"content\": \"post body\",\n   \"commentsAllowed\": true,\n   \"shouldPin\": false,\n   \"userGroupId\": 5,\n   \"mentionedPersonIds\": [\n       2, 4, 5\n   ],\n   \"linkMeta\": {\n      \"type\": \"YOUTUBE\",\n      \"mediaId\": \"\",\n      \"title\": \"\",\n      \"description\": \"\",\n      \"thumbnail\": \"\",\n      \"url\": \"\"\n   }\n}",
													"contentType": "application/json",
													"description": "(Required) Post data",
													"type": "text"
												},
												{
													"key": "files",
													"description": "(Optional) Post files",
													"type": "file",
													"src": [],
													"disabled": true
												},
												{
													"key": "files",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{post-service}}/api/v2/posts",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get post",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{post-service}}/api/v2/posts/:postId",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												":postId"
											],
											"variable": [
												{
													"key": "postId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find posts",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/posts?states=PUBLISHED&page=0&size=10&sortType=NEWEST",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts"
											],
											"query": [
												{
													"key": "query",
													"value": "post",
													"description": "The search term query that filters posts by content",
													"disabled": true
												},
												{
													"key": "groupIds",
													"value": "3",
													"disabled": true
												},
												{
													"key": "states",
													"value": "PUBLISHED",
													"description": "Filters the posts by the provided states, e.g.: DELETED, REJECTED, PUBLISHED, WAITING_TO_BE_PUBLISHED, DRAFT"
												},
												{
													"key": "pinned",
													"value": "false",
													"description": "Filters the posts by the pinned state",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "authorIds",
													"value": "98",
													"description": "Filters the posts by the ids of person who created the posts",
													"disabled": true
												},
												{
													"key": "sortType",
													"value": "NEWEST",
													"description": "Valid values are: NEWEST, POPULAR, TRENDING, TOP"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync post author uuid",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/posts/sync/post-author",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												"sync",
												"post-author"
											]
										}
									},
									"response": []
								},
								{
									"name": "Push all published posts to kafka",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/posts/sync/posts-published",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												"sync",
												"posts-published"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update post",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "data",
													"value": "{\n    \"content\": \"post body (upd)\",\n    \"shouldPin\": true,\n    \"commentsAllowed\": false,\n    \"state\": \"PUBLISHED\",\n    \"mentionedPersonIds\": [\n        4, 5, 7, 8\n    ],\n   \"linkMeta\": {\n      \"type\": \"YOUTUBE\",\n      \"mediaId\": \"\",\n      \"title\": \"\",\n      \"description\": \"\",\n      \"thumbnail\": \"\",\n      \"url\": \"1234\"\n   }\n}",
													"contentType": "application/json",
													"description": "(Optional) Update post data",
													"type": "text"
												},
												{
													"key": "files",
													"description": "(Optional) Update post files",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{post-service}}/api/v2/posts/:postId",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												":postId"
											],
											"variable": [
												{
													"key": "postId",
													"value": "13"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find posts with complaints",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/posts/search/with-complaints?page=0&size=10",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												"search",
												"with-complaints"
											],
											"query": [
												{
													"key": "groupId",
													"value": "1",
													"description": "Optional. If missing, user admin or moderator groups will be used. ",
													"disabled": true
												},
												{
													"key": "complaintState",
													"value": "PENDING",
													"description": "Optional. Default value - PENDING. Valid values are PENDING, REJECTED, or POST_REJECTED. ",
													"disabled": true
												},
												{
													"key": "postState",
													"value": "PUBLISHED",
													"description": "Optional. Default value - PUBLISHED. Valid values are DELETED, REJECTED, PUBLISHED, WAITING_TO_BE_PUBLISHED, DRAFT.",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Reject post by complaint",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/posts/complaints/:complaintId/reject?reason=some text",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												"complaints",
												":complaintId",
												"reject"
											],
											"query": [
												{
													"key": "reason",
													"value": "some text",
													"description": "The reason"
												}
											],
											"variable": [
												{
													"key": "complaintId",
													"value": ""
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create post",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "data",
											"value": "{ \n   \"content\": \"post body\",\n   \"commentsAllowed\": true,\n   \"shouldPin\": false,\n   \"userGroupId\": 5,\n   \"mentionedPersonIds\": [\n       2, 4, 5\n   ],\n   \"linkMeta\": {\n      \"type\": \"YOUTUBE\",\n      \"mediaId\": \"\",\n      \"title\": \"\",\n      \"description\": \"\",\n      \"thumbnail\": \"\",\n      \"url\": \"\"\n   }\n}",
											"contentType": "application/json",
											"description": "(Required) Post data",
											"type": "text"
										},
										{
											"key": "files",
											"description": "(Optional) Post files",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "files",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get post",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update post",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "data",
											"value": "{\n    \"content\": \"post body (upd)\",\n    \"shouldPin\": true,\n    \"commentsAllowed\": false,\n    \"state\": \"PUBLISHED\",\n    \"mentionedPersonIds\": [\n        4, 5, 7, 8\n    ],\n   \"linkMeta\": {\n      \"type\": \"YOUTUBE\",\n      \"mediaId\": \"\",\n      \"title\": \"\",\n      \"description\": \"\",\n      \"thumbnail\": \"\",\n      \"url\": \"1234\"\n   }\n}",
											"contentType": "application/json",
											"description": "(Optional) Update post data",
											"type": "text"
										},
										{
											"key": "files",
											"description": "(Optional) Update post files",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find posts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts?page=0&size=10&sortType=NEWEST",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts"
									],
									"query": [
										{
											"key": "query",
											"value": "post",
											"description": "The search term query that filters posts by content",
											"disabled": true
										},
										{
											"key": "groupIds",
											"value": "1",
											"disabled": true
										},
										{
											"key": "votedByPersonIds",
											"value": "4",
											"description": "Filters the posts by the persons ids who voted the posts",
											"disabled": true
										},
										{
											"key": "states",
											"value": "PUBLISHED,WAITING_TO_BE_PUBLISHED",
											"description": "Filters the posts by the provided states, e.g.: DELETED, REJECTED, PUBLISHED, WAITING_TO_BE_PUBLISHED, DRAFT",
											"disabled": true
										},
										{
											"key": "pinned",
											"value": "false",
											"description": "Filters the posts by the pinned state",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "authorIds",
											"value": "1",
											"description": "Filters the posts by the ids of person who created the posts",
											"disabled": true
										},
										{
											"key": "sortType",
											"value": "NEWEST",
											"description": "Valid values are: NEWEST, POPULAR, TRENDING, TOP"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add vote to the post",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/votes/:voteType",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"votes",
										":voteType"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										},
										{
											"key": "voteType",
											"value": "UPVOTE",
											"description": "Valid values are: UPVOTE, DOWNVOTE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post vote",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/votes",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"votes"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get post file",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/files/:fileId/download",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"files",
										":fileId",
										"download"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										},
										{
											"key": "fileId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post media file",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/files/:fileId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"files",
										":fileId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										},
										{
											"key": "fileId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get involved persons in the post",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/involvedPersonsIds",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"involvedPersonsIds"
									],
									"query": [
										{
											"key": "postId",
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find posts with complaints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/search/with-complaints?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"search",
										"with-complaints"
									],
									"query": [
										{
											"key": "groupId",
											"value": "1",
											"description": "Optional. If missing, user admin or moderator groups will be used. ",
											"disabled": true
										},
										{
											"key": "complaintState",
											"value": "PENDING",
											"description": "Optional. Default value - PENDING. Valid values are PENDING, REJECTED, or POST_REJECTED. ",
											"disabled": true
										},
										{
											"key": "postState",
											"value": "PUBLISHED",
											"description": "Optional. Default value - PUBLISHED. Valid values are DELETED, REJECTED, PUBLISHED, WAITING_TO_BE_PUBLISHED, DRAFT.",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject post by complaint",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/complaints/:complaintId/reject?reason=some text",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"complaints",
										":complaintId",
										"reject"
									],
									"query": [
										{
											"key": "reason",
											"value": "some text",
											"description": "The reason"
										}
									],
									"variable": [
										{
											"key": "complaintId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Synchronize post statistics",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/stats/sync",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"stats",
										"sync"
									]
								}
							},
							"response": []
						},
						{
							"name": "Compare post statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/stats/compare",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"stats",
										"compare"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post LinkMeta",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/linkMeta/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"linkMeta",
										":postId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post Complaint API",
					"item": [
						{
							"name": "V2",
							"item": [
								{
									"name": "Create post complaint",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reasonId\": 1,\n    \"reason\": \"Some reason\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post-service}}/api/v2/posts/:postId/complaints",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												":postId",
												"complaints"
											],
											"variable": [
												{
													"key": "postId",
													"value": "85"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update post complaint",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reasonId\": 1,\n    \"reason\": \"Some reason\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post-service}}/api/v2/posts/:postId/complaints/:complaintId",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"posts",
												":postId",
												"complaints",
												":complaintId"
											],
											"variable": [
												{
													"key": "postId",
													"value": "85"
												},
												{
													"key": "complaintId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create post complaint",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": {\n       \"id\": 1\n    }\n}  \n/*\"reasonOther\": \"Complaint reason for post 1\"*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/complaints",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"complaints"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get post complaint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/complaints/:complaintId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"complaints",
										":complaintId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										},
										{
											"key": "complaintId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update post complaint",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": {\n       \"id\": 2\n    }\n}  \n/*\"reasonOther\": \"Complaint reason for post 1 (updated)\"*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/complaints/:complaintId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"complaints",
										":complaintId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										},
										{
											"key": "complaintId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post complaint",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/complaints/:complaintId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"complaints",
										":complaintId"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										},
										{
											"key": "complaintId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find post complaints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/complaints",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"complaints"
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject all post complaints",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/:postId/reject-complaints?reason=some text",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										":postId",
										"reject-complaints"
									],
									"query": [
										{
											"key": "reason",
											"value": "some text",
											"description": "The reason"
										}
									],
									"variable": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Complaint Reason API",
					"item": [
						{
							"name": "Create complaint reason",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Reason 1\",\n    \"localizations\": {\n        \"ar\": \"Arabic name\"\n    }\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts/complaints/reasons",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"complaints",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update complaint reason",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Reason 1 (updated)\",\n    \"localizations\": {\n        \"ar\": \"Arabic updated\"\n    }\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts/complaints/reasons/:reasonId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"complaints",
										"reasons",
										":reasonId"
									],
									"variable": [
										{
											"key": "reasonId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete complaint reason",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/complaints/reasons/:reasonId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"complaints",
										"reasons",
										":reasonId"
									],
									"variable": [
										{
											"key": "reasonId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find complaint reasons",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/complaints/reasons",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"complaints",
										"reasons"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get complaint reason",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/complaints/reasons/:reasonId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"complaints",
										"reasons",
										":reasonId"
									],
									"variable": [
										{
											"key": "reasonId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comment API",
					"item": [
						{
							"name": "V2",
							"item": [
								{
									"name": "Create comment",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "data",
													"value": "{\n    \"postUuid\": \"c674fb74-05ab-4050-9ca1-4a67f84f6325\",\n    \"content\": \"Comment 1\",\n    \"mentionedPersonIds\": [\n        4,\n        5\n    ]\n}",
													"contentType": "application/json",
													"description": "(Required) Post data",
													"type": "text"
												},
												{
													"key": "file",
													"description": "(Optional) Post files",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{post-service}}/api/v2/comments",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comment",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "727beea2-0f1a-48a3-9f4b-423729e20322"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update comment",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "data",
													"value": "{\n    \"content\": \"Comment 1 (updated)\"\n}",
													"contentType": "application/json",
													"description": "(Required) Post data",
													"type": "text"
												},
												{
													"key": "file",
													"description": "(Optional) Post files",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "727beea2-0f1a-48a3-9f4b-423729e20322"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete comment",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "fa899cd1-7dcb-4026-b2dd-93cc563f2752"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete comment media",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/deleteMedia",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"deleteMedia"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "82341e40-c50d-42aa-8538-dc894840f9f9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find comments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments?postUuid=7727d401-662f-4657-a543-b3fa1b9f7f01&page=0&size=10",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments"
											],
											"query": [
												{
													"key": "postUuid",
													"value": "7727d401-662f-4657-a543-b3fa1b9f7f01",
													"description": "Required parmeter"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add vote to the post comment",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/votes/:voteType",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"votes",
												":voteType"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "93d17365-deb9-4389-a90a-c43c6f10d34d"
												},
												{
													"key": "voteType",
													"value": "UPVOTE",
													"description": "Valid values are: UPVOTE, DOWNVOTE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete post comment vote",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/votes",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"votes"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "93d17365-deb9-4389-a90a-c43c6f10d34d"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Reply on comment",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "data",
													"value": "{\n    \"content\": \"Reply on comment\",\n    \"mentionedPersonIds\": [\n        4,\n        5\n    ]\n}",
													"contentType": "application/json",
													"description": "(Required) Post data",
													"type": "text"
												},
												{
													"key": "file",
													"description": "(Optional) Post files",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/reply",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"reply"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "727beea2-0f1a-48a3-9f4b-423729e20322"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comment replies",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/replies",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"replies"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "93d17365-deb9-4389-a90a-c43c6f10d34d"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Find comments with complaints",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/search/with-complaints?page=0&size=10",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												"search",
												"with-complaints"
											],
											"query": [
												{
													"key": "groupId",
													"value": "1",
													"disabled": true
												},
												{
													"key": "complainState",
													"value": "PENDING",
													"description": "Optional. Default value - PENDING. Valid values are PENDING, REJECTED,COMMENT_REJECTED",
													"disabled": true
												},
												{
													"key": "deleted",
													"value": "true",
													"description": "Optional. Default value - false",
													"disabled": true
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Reject comment by complaint",
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{post-service}}/api/v2/comments/complaints/:complaintUuid/reject?reason=some text",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												"complaints",
												":complaintUuid",
												"reject"
											],
											"query": [
												{
													"key": "reason",
													"value": "some text"
												}
											],
											"variable": [
												{
													"key": "complaintUuid",
													"value": "21cb0ed8-1a72-4570-b5d6-7e9b99404d85"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"postUuid\": \"edeb8d55-c7bb-48ba-b9f0-ea17b7b63d83\",\n    \"content\": \"Comment 1\",\n    \"mentionedPersonIds\": [\n        4,\n        5\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/comments",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get comment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "fa899cd1-7dcb-4026-b2dd-93cc563f2752"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Comment 1 (updated)\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "eb179fc8-a7b5-468a-b41f-18cda51d1485"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "fa899cd1-7dcb-4026-b2dd-93cc563f2752"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find comments",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments?postUuid=7727d401-662f-4657-a543-b3fa1b9f7f01&page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments"
									],
									"query": [
										{
											"key": "postUuid",
											"value": "7727d401-662f-4657-a543-b3fa1b9f7f01",
											"description": "Required parmeter"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add vote to the post comment",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/votes/:voteType",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"votes",
										":voteType"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "eb179fc8-a7b5-468a-b41f-18cda51d1485"
										},
										{
											"key": "voteType",
											"value": "UPVOTE",
											"description": "Valid values are: UPVOTE, DOWNVOTE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post comment vote",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/votes",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"votes"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "eb179fc8-a7b5-468a-b41f-18cda51d1485"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reply on comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Reply on comment\",\n    \"mentionedPersonIds\": [\n        4,\n        5\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/reply",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"reply"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "c3285ccd-ec06-4bf5-8684-8e768515e62d"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get comment replies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/replies",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"replies"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "eb179fc8-a7b5-468a-b41f-18cda51d1485"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find comments with complaints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/search/with-complaints?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										"search",
										"with-complaints"
									],
									"query": [
										{
											"key": "groupId",
											"value": "1",
											"disabled": true
										},
										{
											"key": "complainState",
											"value": "PENDING",
											"description": "Optional. Default value - PENDING. Valid values are PENDING, REJECTED,COMMENT_REJECTED",
											"disabled": true
										},
										{
											"key": "deleted",
											"value": "true",
											"description": "Optional. Default value - false",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject comment by complaint",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/complaints/:complaintUuid/reject?reason=some text",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										"complaints",
										":complaintUuid",
										"reject"
									],
									"query": [
										{
											"key": "reason",
											"value": "some text"
										}
									],
									"variable": [
										{
											"key": "complaintUuid",
											"value": "21cb0ed8-1a72-4570-b5d6-7e9b99404d85"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comment Complaint API",
					"item": [
						{
							"name": "V2",
							"item": [
								{
									"name": "Create comment complaint",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reasonId\": 1,\n    \"reason\": \"Some reason\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/complaints",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"complaints"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "169f8002-b1eb-4d16-b43e-061717bae4c3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update comment complaint",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reasonId\": 1,\n    \"reason\": \"Some reason\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{post-service}}/api/v2/comments/:commentUuid/complaints/:complaintUuid",
											"host": [
												"{{post-service}}"
											],
											"path": [
												"api",
												"v2",
												"comments",
												":commentUuid",
												"complaints",
												":complaintUuid"
											],
											"variable": [
												{
													"key": "commentUuid",
													"value": "169f8002-b1eb-4d16-b43e-061717bae4c3"
												},
												{
													"key": "complaintUuid",
													"value": "bcca923f-1a23-493b-89a0-89e22c46342c"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create comment complaint",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": {\n       \"id\": 1\n    }\n}  \n/*\"reasonOther\": \"Complaint reason for comment 1\"*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/complaints",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"complaints"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "b73be8b3-3d48-454e-aa0d-f7231ced1609"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get comment complaint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/complaints/:complaintUuid",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"complaints",
										":complaintUuid"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "b73be8b3-3d48-454e-aa0d-f7231ced1609"
										},
										{
											"key": "complaintUuid",
											"value": "c65b1da7-50ec-4880-9b8a-323a5e35a7bb"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update comment complaint",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": {\n       \"id\": 2\n    }\n}  \n/*\"reasonOther\": \"Complaint reason for comment 1 (updated)\"*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/complaints/:complaintUuid",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"complaints",
										":complaintUuid"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "b73be8b3-3d48-454e-aa0d-f7231ced1609"
										},
										{
											"key": "complaintUuid",
											"value": "c65b1da7-50ec-4880-9b8a-323a5e35a7bb"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove comment complaint",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/complaints/:complaintUuid",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"complaints",
										":complaintUuid"
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "b73be8b3-3d48-454e-aa0d-f7231ced1609"
										},
										{
											"key": "complaintUuid",
											"value": "c65b1da7-50ec-4880-9b8a-323a5e35a7bb"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find comment complaints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/complaints?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"complaints"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "b73be8b3-3d48-454e-aa0d-f7231ced1609"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject all comment complaints",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/comments/:commentUuid/reject-complaints?reason=some text",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"comments",
										":commentUuid",
										"reject-complaints"
									],
									"query": [
										{
											"key": "reason",
											"value": "some text",
											"description": "The reason"
										}
									],
									"variable": [
										{
											"key": "commentUuid",
											"value": "3cbf166f-cc31-4f8d-919b-1b0d54aa55b3"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post Collection API",
					"item": [
						{
							"name": "Create collection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Post collection 1\",\n    \"isPublic\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update collection",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Post collection 1\",\n    \"isPublic\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/:collectionId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										":collectionId"
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get collection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/:collectionId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										":collectionId"
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find collections",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "query",
											"value": "Saved",
											"description": "(Optional) Filters person collections by matched collection name",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find my collection by postId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/my-collection-by-post-id?postId=1",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										"my-collection-by-post-id"
									],
									"query": [
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete collection",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/:collectionId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										":collectionId"
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add post (to collection)",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/:collectionId/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										":collectionId",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "1"
										},
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find posts (in collection)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/:collectionId/posts?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										":collectionId",
										"posts"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "postId",
											"value": "1",
											"description": "(Optional) Filters the post collections by the post included in collection",
											"disabled": true
										},
										{
											"key": "query",
											"value": "post",
											"description": "(Optional) The search term query that filters posts by content",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post (from collection)",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/post-collections/:collectionId/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"post-collections",
										":collectionId",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "collectionId",
											"value": "1"
										},
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Group Post Collection API",
					"item": [
						{
							"name": "Create group collection",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiZ3JvdXAtc2VydmljZSIsInBvc3Qtc2VydmljZSIsInBlcnNvbi1zZXJ2aWNlIl0sImV4cCI6MTYyODI5MTQzNSwidXNlcl9uYW1lIjoiYUB0ZXN0LmNvbSIsImp0aSI6IjIxMGU1ZWVkLTY5ZmQtNDEwMi1hYmNlLTI4MDIwMWExOWFkZSIsImNsaWVudF9pZCI6ImNsaWVudCIsInNjb3BlIjpbIm9wZW5pZCJdfQ.IKRC1fMPTaGIdYlNpHcSJeHUgJlnaL4-HiGmBiD0mC0",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"groupId\": 3,\n  \"name\": \"Group post collection 1\",\n  \"defaultCollection\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get group collection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections/:groupCollectionId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections",
										":groupCollectionId"
									],
									"variable": [
										{
											"key": "groupCollectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete group collection",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections/:groupCollectionId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections",
										":groupCollectionId"
									],
									"variable": [
										{
											"key": "groupCollectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find group collections",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections"
									],
									"query": [
										{
											"key": "groupId",
											"value": "1",
											"description": "(Optional) Filters collections list by the owner group id",
											"disabled": true
										},
										{
											"key": "personId",
											"value": "1",
											"description": "(Optional) Filters collections by the person creator",
											"disabled": true
										},
										{
											"key": "query",
											"value": "post",
											"description": "(Optional) Filters collections by name matching the query pattern",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add post (to group collection)",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections/:groupCollectionId/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections",
										":groupCollectionId",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "groupCollectionId",
											"value": "1"
										},
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete post (from group collection)",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections/:groupCollectionId/posts/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections",
										":groupCollectionId",
										"posts",
										":postId"
									],
									"variable": [
										{
											"key": "groupCollectionId",
											"value": "1"
										},
										{
											"key": "postId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find posts (in group collection)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/group-post-collections/:groupPostCollectionId/posts?page=0&size=10",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"group-post-collections",
										":groupPostCollectionId",
										"posts"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "query",
											"value": "post",
											"description": "(Optional) The search term query that filters posts by content",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "groupPostCollectionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Story API",
					"item": [
						{
							"name": "Create story",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "references",
											"value": "[\"ref1\", \"ref2\"]",
											"contentType": "application/json",
											"description": "(Optional)",
											"type": "text"
										},
										{
											"key": "file",
											"description": "(Required) The media file for the story",
											"type": "file",
											"src": "/home/alexg/Downloads/avatar1833.jpg"
										}
									]
								},
								"url": {
									"raw": "{{post-service}}/api/v1/stories",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get story",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories/:storyId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										":storyId"
									],
									"variable": [
										{
											"key": "storyId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get story file",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories/:storyId/media",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										":storyId",
										"media"
									],
									"variable": [
										{
											"key": "storyId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete story",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories/:storyId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										":storyId"
									],
									"variable": [
										{
											"key": "storyId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find stories",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories?page=0&size=10&ownerIds=1,4&unseenOnly=false",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "ownerIds",
											"value": "1,4",
											"description": "(Optional) Filters stories by IDs of person subscriptions, or person ID. If not specified, returns stories of all subscriptions."
										},
										{
											"key": "unseenOnly",
											"value": "false",
											"description": "Filters not viewed stories if set to true or omitted. If false, returns stories regardless of their view state."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add story view",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories/:storyId/views",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										":storyId",
										"views"
									],
									"variable": [
										{
											"key": "storyId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find views (for current person)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories/views",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										"views"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user story configuration",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stories/configuration",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										"configuration"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set user story configuration",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accessType\": \"SELECTED_FOLLOWERS\",\n    \"allowedFollowersIds\": [\n        8,\n        11\n    ]\n}\n\n//\"accessType\": \"PUBLIC\", \"ALL_FOLLOWERS\", \"SELECTED_FOLLOWERS\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/stories/configuration",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stories",
										"configuration"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post Statistics API",
					"item": [
						{
							"name": "Get post statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/stats",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"stats"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "2021-12-27",
											"description": "Returns post statistics data after specified date. Optional",
											"disabled": true
										},
										{
											"key": "timeInterval",
											"value": "YEAR",
											"description": "Time interval for which statistical results are calculated - DAY, MONTH, or YEAR.  Default value - MONTH",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Post Notification Settings Api",
					"item": [
						{
							"name": "Get all post notification settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/notification-settings?page=0&size=10&postIds=",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"notification-settings"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "postIds",
											"value": "",
											"description": "Filter by postIds"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get post notification settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{post-service}}/api/v1/posts/notification-settings/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"notification-settings",
										":postId"
									],
									"variable": [
										{
											"key": "postId",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set post notification settings",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"isMuted\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{post-service}}/api/v1/posts/notification-settings/:postId",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"notification-settings",
										":postId"
									],
									"variable": [
										{
											"key": "postId",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Link Preview API",
					"item": [
						{
							"name": "Get link preview",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{post-service}}/api/v1/link-preview/?link=google.com",
									"host": [
										"{{post-service}}"
									],
									"path": [
										"api",
										"v1",
										"link-preview",
										""
									],
									"query": [
										{
											"key": "link",
											"value": "google.com"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "notification-service",
			"item": [
				{
					"name": "Notification API",
					"item": [
						{
							"name": "Create notification (for testing)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"receiverId\": 3,\r\n    \"body\": \"Some text ...\",\r\n    \"topic\": \"POST_STATE_CHANGED\" \r\n}\r\n\r\n/* Valid values for topic: POST_STATE_CHANGED, POST_COMMENTED, PERSON_IS_MENTIONED, POST_VOTED, COMMENT_VOTED, STORY_CREATED */",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{notification-service}}/api/v1/notifications",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"notifications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find notifications (for the last 3 days, configured)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{notification-service}}/api/v1/notifications",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"notifications"
									],
									"query": [
										{
											"key": "state",
											"value": "READ",
											"description": "Optional. Valid values are: NEW, READ, DELETED. Takes precedence over 'showDeleted' parameter.",
											"disabled": true
										},
										{
											"key": "showDeleted",
											"value": "false",
											"description": "Optional. Default value - false",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update notification state",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{notification-service}}/api/v1/notifications?notificationIds=3&state=DELETED",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"notifications"
									],
									"query": [
										{
											"key": "notificationIds",
											"value": "3",
											"description": "Required"
										},
										{
											"key": "state",
											"value": "DELETED",
											"description": "Required. Valid values are: NEW, READ, DELETED"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Push notification",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{notification-service}}/api/v1/notifications/push",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"notifications",
										"push"
									],
									"query": [
										{
											"key": "sendToToken",
											"value": "",
											"disabled": true
										},
										{
											"key": "topic",
											"value": "topic",
											"disabled": true
										},
										{
											"key": "message",
											"value": "hello",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Person Token Api",
					"item": [
						{
							"name": "Get all user tokens",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{notification-service}}/api/v1/tokens/person-device-tokens",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										"person-device-tokens"
									],
									"query": [
										{
											"key": "device",
											"value": "web",
											"description": "(Optional) Filter tokens by device attribute.",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete person token",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{notification-service}}/api/v1/tokens/person-device-tokens/?pushToken=234322",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										"person-device-tokens",
										""
									],
									"query": [
										{
											"key": "pushToken",
											"value": "234322"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add person token",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{notification-service}}/api/v1/tokens/person-device-tokens/?pushToken=234322&device=web",
									"host": [
										"{{notification-service}}"
									],
									"path": [
										"api",
										"v1",
										"tokens",
										"person-device-tokens",
										""
									],
									"query": [
										{
											"key": "pushToken",
											"value": "234322"
										},
										{
											"key": "device",
											"value": "web"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "chat-service",
			"item": [
				{
					"name": "Chat API",
					"item": [
						{
							"name": "Create chat room",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "chat-access-token",
										"value": "N/A",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{chat-service}}/api/v1/chat/chat-rooms/search/findOrCreateByDestinationPersonId?destinationPersonId=5",
									"host": [
										"{{chat-service}}"
									],
									"path": [
										"api",
										"v1",
										"chat",
										"chat-rooms",
										"search",
										"findOrCreateByDestinationPersonId"
									],
									"query": [
										{
											"key": "destinationPersonId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Synapse",
					"item": [
						{
							"name": "Admin APIs",
							"item": [
								{
									"name": "Get all users",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "syt_dXNlci45OA_ukNjtybqXKpHdPwtmATK_0N3iVt",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_synapse/admin/v2/users",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_synapse",
												"admin",
												"v2",
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get user by name",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "syt_dXNlci45OA_ukNjtybqXKpHdPwtmATK_0N3iVt",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_synapse/admin/v2/users/:name",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_synapse",
												"admin",
												"v2",
												"users",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "@user.117:matrix"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update user details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "syt_dXNlci45OA_ukNjtybqXKpHdPwtmATK_0N3iVt",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"deactivated\": false,\n    \"password\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{synapse-service}}/_synapse/admin/v2/users/:name",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_synapse",
												"admin",
												"v2",
												"users",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "@user.117:matrix"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate the user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "syt_dXNlci45OA_ukNjtybqXKpHdPwtmATK_0N3iVt",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_synapse/admin/v1/deactivate/:name",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_synapse",
												"admin",
												"v1",
												"deactivate",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "@user.117:matrix"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Authentication",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"type\":\"m.login.password\",\n    \"user\":\"@user.1:matrix\",\n    \"password\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxZGI5ZmZiZi03YjU5LTcxODEtMTM3OS1lZWYxMmIyNjhhZTciLCJyb2xlcyI6WyJBRE1JTiJdLCJhdXRoX2tleSI6IjFfMmUxNWY0NzEtNDMzNi00ZjExLTg5NGMtOTU3NDc3NGQ3NTE2IiwiZXhwIjoxNjcxNTI2NDM5LCJ0eXBlIjoidG9rZW4iLCJpYXQiOjE2NzE1MjI4Mzl9.z2EuaFqrWmesbHnt8hFpV5YoCThIh4rZP7p43UGYZnA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/r0/login",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"r0",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Media File",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_ISbLjLyUzlMgBhCUehDO_0R3oYM",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": "/Users/bauyrzhanibraimov/Downloads/20070917_115.jpeg"
									}
								},
								"url": {
									"raw": "{{synapse-service}}/_matrix/media/v3/upload?filename=test",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"media",
										"v3",
										"upload"
									],
									"query": [
										{
											"key": "filename",
											"value": "test"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Media File",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/media/v3/download/:serverName/:mediaId",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"media",
										"v3",
										"download",
										":serverName",
										":mediaId"
									],
									"variable": [
										{
											"key": "serverName",
											"value": "matrix"
										},
										{
											"key": "mediaId",
											"value": "ihwODBqPJzHdyadtTyROKaAn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Media File Thumbnail",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/media/v3/thumbnail/:serverName/:mediaId?width=300&height=300",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"media",
										"v3",
										"thumbnail",
										":serverName",
										":mediaId"
									],
									"query": [
										{
											"key": "width",
											"value": "300"
										},
										{
											"key": "height",
											"value": "300"
										}
									],
									"variable": [
										{
											"key": "serverName",
											"value": "matrix"
										},
										{
											"key": "mediaId",
											"value": "ihwODBqPJzHdyadtTyROKaAn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the user's current state",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4y_otrOyBNJouwSxFYxjsDL_2HkQoz",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/initialSync?limit=25457792&archived=true",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"initialSync"
									],
									"query": [
										{
											"key": "limit",
											"value": "25457792"
										},
										{
											"key": "archived",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"name": "The user's current state",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_matrix/client/v3/initialSync?limit=25457792&archived=true",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_matrix",
												"client",
												"v3",
												"initialSync"
											],
											"query": [
												{
													"key": "limit",
													"value": "25457792"
												},
												{
													"key": "archived",
													"value": "true"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n \"end\": \"s3456_9_0\",\r\n \"presence\": [\r\n  {\r\n   \"$ref\": \"../../event-schemas/examples/m.presence.yaml\"\r\n  }\r\n ],\r\n \"account_data\": [\r\n  {\r\n   \"type\": \"org.example.custom.config\",\r\n   \"content\": {\r\n    \"custom_config_key\": \"custom_config_value\"\r\n   }\r\n  }\r\n ],\r\n \"rooms\": [\r\n  {\r\n   \"membership\": \"join\",\r\n   \"messages\": {\r\n    \"chunk\": [\r\n     {\r\n      \"$ref\": \"../../event-schemas/examples/m.room.message$m.text.yaml\"\r\n     },\r\n     {\r\n      \"$ref\": \"../../event-schemas/examples/m.room.message$m.video.yaml\"\r\n     }\r\n    ],\r\n    \"end\": \"s3456_9_0\",\r\n    \"start\": \"t44-3453_9_0\"\r\n   },\r\n   \"room_id\": \"!TmaZBKYIFrIPVGoUYp:localhost\",\r\n   \"state\": [\r\n    {\r\n     \"$ref\": \"../../event-schemas/examples/m.room.join_rules.yaml\"\r\n    },\r\n    {\r\n     \"$ref\": \"../../event-schemas/examples/m.room.member.yaml\"\r\n    },\r\n    {\r\n     \"$ref\": \"../../event-schemas/examples/m.room.create.yaml\"\r\n    },\r\n    {\r\n     \"$ref\": \"../../event-schemas/examples/m.room.power_levels.yaml\"\r\n    }\r\n   ],\r\n   \"visibility\": \"private\",\r\n   \"account_data\": [\r\n    {\r\n     \"type\": \"m.tag\",\r\n     \"content\": {\r\n      \"tags\": {\r\n       \"work\": {\r\n        \"order\": 1\r\n       }\r\n      }\r\n     }\r\n    },\r\n    {\r\n     \"type\": \"org.example.custom.room.config\",\r\n     \"content\": {\r\n      \"custom_config_key\": \"custom_config_value\"\r\n     }\r\n    }\r\n   ]\r\n  }\r\n ]\r\n}"
								}
							]
						},
						{
							"name": "Listen on the event stream",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_hSBYxDSdSbtWrPwhYhuN_04G2x9",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/events?from=s53_604_36_59_50_1_1_47_1&timeout=56303853",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"events"
									],
									"query": [
										{
											"key": "from",
											"value": "s53_604_36_59_50_1_1_47_1",
											"description": "The token to stream from. This token is either from a previous\nrequest to this API or from the initial sync API."
										},
										{
											"key": "timeout",
											"value": "56303853",
											"description": "The maximum time in milliseconds to wait for an event."
										}
									]
								}
							},
							"response": [
								{
									"name": "The events received, which may be none",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_matrix/client/v3/events?from=s3456_9_0&timeout=56303853",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_matrix",
												"client",
												"v3",
												"events"
											],
											"query": [
												{
													"key": "from",
													"value": "s3456_9_0"
												},
												{
													"key": "timeout",
													"value": "56303853"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"start\": \"s3456_9_0\",\n    \"end\": \"s3457_9_0\",\n    \"chunk\": [\n        {\n            \"$ref\": \"../../event-schemas/examples/m.room.message$m.text.yaml\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get a single event by event ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_hSBYxDSdSbtWrPwhYhuN_04G2x9",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/events/:eventId",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId",
											"value": "$2zZKM41Niv-Aodf-j9LTV-PZoJxiRDF7mJDU2uQcDbE",
											"description": "(Required) The event ID to get."
										}
									]
								}
							},
							"response": [
								{
									"name": "The full event",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_matrix/client/v3/events/:eventId",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_matrix",
												"client",
												"v3",
												"events",
												":eventId"
											],
											"variable": [
												{
													"key": "eventId",
													"value": "$asfDuShaf7Gafaw:matrix.org"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n \"$ref\": \"../../event-schemas/examples/m.room.message$m.text.yaml\"\n}"
								}
							]
						},
						{
							"name": "Synchronise the client's state and receive new messages",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_hSBYxDSdSbtWrPwhYhuN_04G2x9",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/sync?filter=0&full_state=true&set_presence=offline&timeout=30000",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"sync"
									],
									"query": [
										{
											"key": "filter",
											"value": "0",
											"description": "The ID of a filter created using the filter API or a filter JSON\nobject encoded as a string. The server will detect whether it is\nan ID or a JSON object by whether the first character is a `\"{\"`\nopen brace. Passing the JSON inline is best suited to one off\nrequests. Creating a filter using the filter API is recommended for\nclients that reuse the same filter multiple times, for example in\nlong poll requests.\nSee [Filtering](/client-server-api/#filtering) for more information."
										},
										{
											"key": "since",
											"value": "s55_638_42_62_53_1_1_48_1",
											"description": "A point in time to continue a sync from. This should be the\n`next_batch` token returned by an earlier call to this endpoint.",
											"disabled": true
										},
										{
											"key": "full_state",
											"value": "true",
											"description": "Controls whether to include the full state for all rooms the user\nis a member of.\nIf this is set to `true`, then all state events will be returned,\neven if `since` is non-empty. The timeline will still be limited\nby the `since` parameter. In this case, the `timeout` parameter\nwill be ignored and the query will return immediately, possibly with\nan empty timeline.\nIf `false`, and `since` is non-empty, only state which has\nchanged since the point indicated by `since` will be returned.\nBy default, this is `false`."
										},
										{
											"key": "set_presence",
											"value": "offline",
											"description": "Controls whether the client is automatically marked as online by\npolling this API. If this parameter is omitted then the client is\nautomatically marked as online when it uses this API. Otherwise if\nthe parameter is set to \"offline\" then the client is not marked as\nbeing online when it uses this API. When set to \"unavailable\", the\nclient is marked as being idle."
										},
										{
											"key": "timeout",
											"value": "30000",
											"description": "The maximum time to wait, in milliseconds, before returning this\nrequest. If no events (or other data) become available before this\ntime elapses, the server will return a response with empty fields.\nBy default, this is `0`, so the server will return immediately\neven if the response is empty."
										}
									]
								}
							},
							"response": [
								{
									"name": "The initial snapshot or delta for the client to use to update their state",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_matrix/client/v3/sync?filter=66696p746572&since=s72594_4483_1934&full_state=true&set_presence=offline&timeout=30000",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_matrix",
												"client",
												"v3",
												"sync"
											],
											"query": [
												{
													"key": "filter",
													"value": "66696p746572"
												},
												{
													"key": "since",
													"value": "s72594_4483_1934"
												},
												{
													"key": "full_state",
													"value": "true"
												},
												{
													"key": "set_presence",
													"value": "offline"
												},
												{
													"key": "timeout",
													"value": "30000"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n \"next_batch\": \"s72595_4483_1934\",\r\n \"presence\": {\r\n  \"events\": [\r\n   {\r\n    \"$ref\": \"../../event-schemas/examples/m.presence.yaml\"\r\n   }\r\n  ]\r\n },\r\n \"account_data\": {\r\n  \"events\": [\r\n   {\r\n    \"type\": \"org.example.custom.config\",\r\n    \"content\": {\r\n     \"custom_config_key\": \"custom_config_value\"\r\n    }\r\n   }\r\n  ]\r\n },\r\n \"rooms\": {\r\n  \"join\": {\r\n   \"!726s6s6q:example.com\": {\r\n    \"summary\": {\r\n     \"m.heroes\": [\r\n      \"@alice:example.com\",\r\n      \"@bob:example.com\"\r\n     ],\r\n     \"m.joined_member_count\": 2,\r\n     \"m.invited_member_count\": 0\r\n    },\r\n    \"state\": {\r\n     \"events\": [\r\n      {\r\n       \"$ref\": \"../../event-schemas/examples/m.room.member.yaml\"\r\n      }\r\n     ]\r\n    },\r\n    \"timeline\": {\r\n     \"events\": [\r\n      {\r\n       \"$ref\": \"../../event-schemas/examples/m.room.member.yaml\"\r\n      },\r\n      {\r\n       \"$ref\": \"../../event-schemas/examples/m.room.message$m.text.yaml\"\r\n      }\r\n     ],\r\n     \"limited\": true,\r\n     \"prev_batch\": \"t34-23535_0_0\"\r\n    },\r\n    \"ephemeral\": {\r\n     \"events\": [\r\n      {\r\n       \"$ref\": \"../../event-schemas/examples/m.typing.yaml\"\r\n      }\r\n     ]\r\n    },\r\n    \"account_data\": {\r\n     \"events\": [\r\n      {\r\n       \"$ref\": \"../../event-schemas/examples/m.tag.yaml\"\r\n      },\r\n      {\r\n       \"type\": \"org.example.custom.room.config\",\r\n       \"content\": {\r\n        \"custom_config_key\": \"custom_config_value\"\r\n       }\r\n      }\r\n     ]\r\n    }\r\n   }\r\n  },\r\n  \"invite\": {\r\n   \"!696r7674:example.com\": {\r\n    \"invite_state\": {\r\n     \"events\": [\r\n      {\r\n       \"sender\": \"@alice:example.com\",\r\n       \"type\": \"m.room.name\",\r\n       \"state_key\": \"\",\r\n       \"content\": {\r\n        \"name\": \"My Room Name\"\r\n       }\r\n      },\r\n      {\r\n       \"sender\": \"@alice:example.com\",\r\n       \"type\": \"m.room.member\",\r\n       \"state_key\": \"@bob:example.com\",\r\n       \"content\": {\r\n        \"membership\": \"invite\"\r\n       }\r\n      }\r\n     ]\r\n    }\r\n   }\r\n  },\r\n  \"knock\": {\r\n   \"!223asd456:example.com\": {\r\n    \"knock_state\": {\r\n     \"events\": [\r\n      {\r\n       \"sender\": \"@alice:example.com\",\r\n       \"type\": \"m.room.name\",\r\n       \"state_key\": \"\",\r\n       \"content\": {\r\n        \"name\": \"My Room Name\"\r\n       }\r\n      },\r\n      {\r\n       \"sender\": \"@bob:example.com\",\r\n       \"type\": \"m.room.member\",\r\n       \"state_key\": \"@bob:example.com\",\r\n       \"content\": {\r\n        \"membership\": \"knock\"\r\n       }\r\n      }\r\n     ]\r\n    }\r\n   }\r\n  },\r\n  \"leave\": {}\r\n }\r\n}"
								}
							]
						},
						{
							"name": "Send a message event to the given room",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_hSBYxDSdSbtWrPwhYhuN_04G2x9",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"msgtype\": \"m.text\",\r\n    \"body\": \"hello\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/rooms/:roomId/send/:eventType/:txnId",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"rooms",
										":roomId",
										"send",
										":eventType",
										":txnId"
									],
									"variable": [
										{
											"key": "roomId",
											"value": "!vSPcKIpODxSggWVexS:matrix",
											"description": "(Required) The room to send the event to."
										},
										{
											"key": "eventType",
											"value": "m.room.message",
											"description": "(Required) The type of event to send."
										},
										{
											"key": "txnId",
											"value": "37",
											"description": "(Required) The transaction ID for this event. Clients should generate an\nID unique across requests with the same access token; it will be\nused by the server to ensure idempotency of requests."
										}
									]
								}
							},
							"response": [
								{
									"name": "An ID for the sent event",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{synapse-service}}/_matrix/client/v3/rooms/:roomId/send/:eventType/:txnId",
											"host": [
												"{{synapse-service}}"
											],
											"path": [
												"_matrix",
												"client",
												"v3",
												"rooms",
												":roomId",
												"send",
												":eventType",
												":txnId"
											],
											"variable": [
												{
													"key": "roomId",
													"value": "!636q39766251:example.com"
												},
												{
													"key": "eventType",
													"value": "m.room.message"
												},
												{
													"key": "txnId",
													"value": "35"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\r\n \"event_id\": \"$YUwRidLecu:example.com\"\r\n}"
								}
							]
						},
						{
							"name": "Get this user's presence state",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4y_otrOyBNJouwSxFYxjsDL_2HkQoz",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/presence/:userId/status",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"presence",
										":userId",
										"status"
									],
									"variable": [
										{
											"key": "userId",
											"value": "@user.1:matrix",
											"description": "(Required) The user whose presence state to get."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new room",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_YWdqLjnzBbSXHSKgalzh_37kmv0",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"preset\": \"public_chat\",\r\n    \"room_alias_name\": \"thepub\",\r\n    \"name\": \"The Grand Duke Pub\",\r\n    \"topic\": \"All about happy hour\",\r\n    \"creation_content\": {\r\n        \"m.federate\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/createRoom",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"createRoom"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all pushers",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_KyBcbAPyroeWQDYJmAdi_0MsVuG",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/pushers",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"pushers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set pusher",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_KyBcbAPyroeWQDYJmAdi_0MsVuG",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"app_display_name\": \"Social Media\",\r\n    \"app_id\": \"com.earthlink.social.development.test\",\r\n    \"append\": false,\r\n    \"data\": {\r\n        \"format\": \"event_id_only\",\r\n        \"url\": \"https://0f24-91-74-31-240.in.ngrok.io/_matrix/push/v1/notify\"\r\n    },\r\n    \"device_display_name\": \"iPhone XS\",\r\n    \"kind\": \"http\",\r\n    \"lang\": \"en\",\r\n    \"profile_tag\": \"abc\",\r\n    \"pushkey\": \"ddiD62PmpL6QrM42VFUhyM:APA91bF-O-ml65H_0q1yk79vebBSa_KMJtl3xhmzAeInF2piVR69ZWJdDbH2Y7-ou0XVJTrGLlCd9aNaB70J0ox4IBw6Mt3W47jtvt3k7juJCOtzjCpyeF9-Wzq4RddKPaVs6B4jme4P\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/pushers/set",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"pushers",
										"set"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all notifications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_KyBcbAPyroeWQDYJmAdi_0MsVuG",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/notifications",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"notifications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite a user to participate in a particular room",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/rooms/:roomId/invite ",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"rooms",
										":roomId",
										"invite "
									],
									"variable": [
										{
											"key": "roomId",
											"value": "",
											"description": "(Required) The room identifier (not alias) to which to invite the user."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Snapshot the current state of a room and its most recent messages",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/rooms/:roomId/initialSync",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"rooms",
										":roomId",
										"initialSync"
									],
									"variable": [
										{
											"key": "roomId",
											"value": "",
											"description": "(Required) The room to get the data."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Start the requesting user participating in a particular room",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "syt_dXNlci4x_ajEykjbjsAaNpxpJQjLL_1CIfj8",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"third_party_signed\": {\r\n        \"value\": \"reference definitions/third_party_signed.yaml not found in the OpenAPI spec\"\r\n    },\r\n    \"reason\": \"Looking for support\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/v3/rooms/:roomId/join",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"v3",
										"rooms",
										":roomId",
										"join"
									],
									"variable": [
										{
											"key": "roomId",
											"value": "!dTeBhuDGQFnNrDutzE:matrix",
											"description": "(Required) The room identifier (not alias) to join."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Versions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/client/versions",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"client",
										"versions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Installed version",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{synapse-service}}/_matrix/federation/v1/version",
									"host": [
										"{{synapse-service}}"
									],
									"path": [
										"_matrix",
										"federation",
										"v1",
										"version"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "short-video-service",
			"item": [
				{
					"name": "Create short video",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Short video Title\",\n    \"categories\": [\n        {\n            \"categoryId\": \"8b426ebc-2dd9-4d19-b656-e08d9f7d5180\",\n            \"name\":\"Sport\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload short video",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "secret",
									"type": "string"
								},
								{
									"key": "key",
									"value": "X-API-KEY",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "secret",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Short video Title 2222\",\r\n    \"categories\": [\r\n        {\r\n            \"categoryId\": \"8b426ebc-2dd9-4d19-b656-e08d9f7d5180\",\r\n            \"name\":\"Sport\"\r\n        }\r\n    ],\r\n    \"url\": \"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/SubaruOutbackOnStreetAndDirt.mp4\",\r\n    \"thumbnailUrl\": \"\",\r\n    \"createdAt\": \"2022-08-01\",\r\n    \"videoDuration\": 22,\r\n    \"likesCount\": 12,\r\n    \"commentsCount\": 11,\r\n    \"playCount\": 13\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/upload",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update short video",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Short video Title Updated\",\r\n    \"privacyLevel\": \"SELECTED_GROUPS\",\r\n    \"selectedGroups\": [1,2],\r\n    \"selectedUsers\": [],\r\n    \"commentsAllowed\": true,\r\n     \"categories\": [\r\n        {\r\n            \"categoryId\": \"8b426ebc-2dd9-4d19-b656-e08d9f7d5180\",\r\n            \"name\":\"Sport\"\r\n        }\r\n    ],\r\n    \"tags\": [3],\r\n    \"metadata\": \r\n    {\r\n        \"data1\": \"example\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/:videoId",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								":videoId"
							],
							"variable": [
								{
									"key": "videoId",
									"value": "540e5a2b-ea84-4193-8e7b-5b1cc3d6075b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get short video",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/:videoId",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								":videoId"
							],
							"variable": [
								{
									"key": "videoId",
									"value": "854ac824-00b7-438f-b193-b4d8bd97422a",
									"description": "Short video unique ID, UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get short videos by author",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/by-author?authorId=1&fromDate=2022-08-01&size=20&pagingState=",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"by-author"
							],
							"query": [
								{
									"key": "authorId",
									"value": "1"
								},
								{
									"key": "fromDate",
									"value": "2022-08-01",
									"description": "Max range is the end of the given year"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "pagingState",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get short videos by categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/by-categories?categories=768e7399-b775-4511-bc66-d4f44460682a, bcabb959-1557-450f-be7f-760d0b10c4ea&fromDate=2022-01-01&size=20&pagingState=",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"by-categories"
							],
							"query": [
								{
									"key": "categories",
									"value": "768e7399-b775-4511-bc66-d4f44460682a, bcabb959-1557-450f-be7f-760d0b10c4ea"
								},
								{
									"key": "fromDate",
									"value": "2022-01-01",
									"description": "Max range is end of the given year"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "pagingState",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set short video configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"privacyLevel\": \"SELECTED_USERS\",\n    \"selectedUsers\": [1, 2, 3],\n    \"selectedGroups\": [],\n    \"commentsAllowed\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/configuration",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get short video configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/configuration",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add short video comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"New comment 3\",\r\n    \"videoId\": \"540e5a2b-ea84-4193-8e7b-5b1cc3d6075b\",\r\n    \"authorId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit short video comment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"New comment 1\",\r\n    \"videoId\": \"540e5a2b-ea84-4193-8e7b-5b1cc3d6075b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment/:commentId",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove short video comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment/:commentId?videoId=0e4dd7a6-15e4-44c2-a6d9-30aba8a45fc6",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment",
								":commentId"
							],
							"query": [
								{
									"key": "videoId",
									"value": "0e4dd7a6-15e4-44c2-a6d9-30aba8a45fc6",
									"description": "Short video unique ID, UUID"
								}
							],
							"variable": [
								{
									"key": "commentId",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find short video comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment?videoId=0e4dd7a6-15e4-44c2-a6d9-30aba8a45fc6&showAll=",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment"
							],
							"query": [
								{
									"key": "videoId",
									"value": "0e4dd7a6-15e4-44c2-a6d9-30aba8a45fc6",
									"description": "Short video unique ID, UUID. Required."
								},
								{
									"key": "showAll",
									"value": "",
									"description": "If true, show deleted comments as well. Optional. Default - false."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get short video comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment/:commentId?videoId=540e5a2b-ea84-4193-8e7b-5b1cc3d6075b",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment",
								":commentId"
							],
							"query": [
								{
									"key": "videoId",
									"value": "540e5a2b-ea84-4193-8e7b-5b1cc3d6075b",
									"description": "Short video unique ID, UUID. Required"
								}
							],
							"variable": [
								{
									"key": "commentId",
									"value": "5",
									"description": "Required"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reply to the short video comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"New comment 3\",\r\n    \"videoId\": \"540e5a2b-ea84-4193-8e7b-5b1cc3d6075b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment/:commentId/reply",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment",
								":commentId",
								"reply"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find short videos of my friends",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/friends?friendUserName=admin",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"friends"
							],
							"query": [
								{
									"key": "friendUserName",
									"value": "admin",
									"description": "Filters friends videos by author username. Required"
								},
								{
									"key": "fromDate",
									"value": "2022-09-27",
									"description": "Filters friends videos created after specified date. Optional",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add vote to the short video",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/:videoId/votes/:voteType",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								":videoId",
								"votes",
								":voteType"
							],
							"variable": [
								{
									"key": "videoId",
									"value": "c1e1d870-5471-4854-862e-853563d23813",
									"description": "Short video UUID. Required"
								},
								{
									"key": "voteType",
									"value": "1",
									"description": "Vote type: 1 - like, 2- dislike. Required"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete my vote",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/:videoId/votes",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								":videoId",
								"votes"
							],
							"variable": [
								{
									"key": "videoId",
									"value": "c1e1d870-5471-4854-862e-853563d23813",
									"description": "Short video UUID. Required"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "short-video-usage-stats-service",
			"item": [
				{
					"name": "Add new event",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"videoId\": \"123\",\n    \"actionType\": \"viewed\",\n    \"actionValue\": \"true\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{short-video-usage-stats-service}}/api/v1/short-video-usage-stats",
							"host": [
								"{{short-video-usage-stats-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video-usage-stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get short video comment replies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{short-video-service}}/api/v1/short-video/comment/:commentId/reply?videoId=540e5a2b-ea84-4193-8e7b-5b1cc3d6075b",
							"host": [
								"{{short-video-service}}"
							],
							"path": [
								"api",
								"v1",
								"short-video",
								"comment",
								":commentId",
								"reply"
							],
							"query": [
								{
									"key": "videoId",
									"value": "540e5a2b-ea84-4193-8e7b-5b1cc3d6075b"
								}
							],
							"variable": [
								{
									"key": "commentId",
									"value": "16"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "comment-service",
			"item": [
				{
					"name": "Create comment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"objectId\": \"540e5a2b-ea84-4193-8e7b-5b1cc3d6075b\",\r\n    \"content\": \"Comment 1\",\r\n    \"authorId\": 1,\r\n    \"mentionedPersonIds\": [\r\n        4,\r\n        5\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{comment-service}}/api/v1/comment",
							"host": [
								"{{comment-service}}"
							],
							"path": [
								"api",
								"v1",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{comment-service}}/api/v1/comment/:commentId?objectId=540e5a2b-ea84-4193-8e7b-5b1cc3d6075b",
							"host": [
								"{{comment-service}}"
							],
							"path": [
								"api",
								"v1",
								"comment",
								":commentId"
							],
							"query": [
								{
									"key": "objectId",
									"value": "540e5a2b-ea84-4193-8e7b-5b1cc3d6075b"
								}
							],
							"variable": [
								{
									"key": "commentId",
									"value": "26"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"objectId\": \"540e5a2b-ea84-4193-8e7b-5b1cc3d6075b\",\r\n    \"content\": \"Comment 1 (updated)\",\r\n    \"mentionedPersonIds\": [\r\n        4,\r\n        5\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{comment-service}}/api/v1/comment/:commentId",
							"host": [
								"{{comment-service}}"
							],
							"path": [
								"api",
								"v1",
								"comment",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "26"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "audit-service",
			"item": [
				{
					"name": "Find audit logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{audit-service}}/api/v1/audit",
							"host": [
								"{{audit-service}}"
							],
							"path": [
								"api",
								"v1",
								"audit"
							],
							"query": [
								{
									"key": "category",
									"value": "USER",
									"disabled": true
								},
								{
									"key": "authorId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "action",
									"value": "MUTE",
									"disabled": true
								},
								{
									"key": "query",
									"value": "mute",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "feed-aggregator-service",
			"item": [
				{
					"name": "Get feed by groups (recent posts)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{recent-feed-aggregator-service}}/api/v1/feed?groupIds=5",
							"host": [
								"{{recent-feed-aggregator-service}}"
							],
							"path": [
								"api",
								"v1",
								"feed"
							],
							"query": [
								{
									"key": "groupIds",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get feed by groups (top posts)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{topk-feed-aggregator-service}}/api/v1/feed?groupIds=8",
							"host": [
								"{{topk-feed-aggregator-service}}"
							],
							"path": [
								"api",
								"v1",
								"feed"
							],
							"query": [
								{
									"key": "groupIds",
									"value": "8"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user-feed-aggregator",
			"item": [
				{
					"name": "Get recent user feed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{user-feed-recent}}/api/v1/feed?page=0&size=5&timestamp=1694760131235",
							"host": [
								"{{user-feed-recent}}"
							],
							"path": [
								"api",
								"v1",
								"feed"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "timestamp",
									"value": "1694760131235"
								},
								{
									"key": "groupIds",
									"value": "3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get topK user feed",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{user-feed-topk}}/api/v1/feed?page=0&size=10&timestamp=1694759468393",
							"host": [
								"{{user-feed-topk}}"
							],
							"path": [
								"api",
								"v1",
								"feed"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "timestamp",
									"value": "1694759468393"
								},
								{
									"key": "groupIds",
									"value": "3",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access.token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const personServiceUrl = pm.variables.get(\"person-service\");",
					"const loginEndpoint = `${personServiceUrl}/api/v1/persons/login`;",
					"",
					"let tokenUpdateRequired = true;",
					"",
					"if(pm.info.requestName.includes('skip autologin')) {",
					"    tokenUpdateRequired = false;",
					"}",
					"",
					"if (tokenUpdateRequired) {",
					"    console.log(\"[Pre-request] Requesting new token...\");",
					"    checkLogin();",
					"}",
					"",
					"function checkLogin() {",
					"    var loginRequest = {",
					"        url: loginEndpoint,",
					"        method: 'POST',",
					"        header: { 'Content-Type': 'application/json' },",
					"        body: {",
					"            mode: 'application/json',",
					"            raw:  JSON.stringify(",
					"                {",
					"                    email: pm.variables.get(\"auth.username\"),",
					"                    password: pm.variables.get(\"auth.password\")",
					"                })",
					"        }",
					"    };",
					"",
					"    pm.sendRequest(loginRequest, function (err, response) {",
					"        var data = response.json();",
					"        console.log(`[Pre-request] Response:`);",
					"        console.log(data);",
					"        if (err == null && response.code == 200) {",
					"            if (tokenUpdateRequired) {",
					"                console.log(\"[Pre-request] Requesting new token...\");",
					"                updateToken(data);",
					"            }            ",
					"        } else {",
					"            if (err) console.log(err);",
					"            console.log(\"[Pre-request] Authentication failed!\");",
					"        }",
					"    });",
					"}",
					"",
					"function updateToken(data) {",
					"    pm.environment.set('access.token', data.token)",
					"    pm.environment.set('access.token.expireTime', new Date(data.expireTime));",
					"    pm.environment.set('refresh.token', data.refreshToken);",
					"    console.log(\"[Pre-request] Token successfully updated.\");",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "person-service",
			"value": "http://localhost:8081"
		},
		{
			"key": "group-service",
			"value": "http://localhost:8082"
		},
		{
			"key": "post-service",
			"value": "http://localhost:8083"
		},
		{
			"key": "notification-service",
			"value": "http://localhost:8084",
			"type": "default"
		},
		{
			"key": "chat-service",
			"value": "http://localhost:8087",
			"type": "default"
		},
		{
			"key": "synapse-service",
			"value": "http://localhost:8008",
			"type": "string"
		},
		{
			"key": "short-video-service",
			"value": "http://localhost:8088",
			"type": "string"
		},
		{
			"key": "short-video-usage-stats-service",
			"value": "http://localhost:8099",
			"type": "string"
		},
		{
			"key": "comment-service",
			"value": "http://localhost:8097",
			"type": "default"
		},
		{
			"key": "audit-service",
			"value": "http://localhost:8089",
			"type": "string"
		},
		{
			"key": "recent-feed-aggregator-service",
			"value": "http://localhost:8093",
			"type": "string"
		},
		{
			"key": "topk-feed-aggregator-service",
			"value": "http://localhost:8094",
			"type": "string"
		},
		{
			"key": "auth.username",
			"value": "admin@creativeadvtech.com"
		},
		{
			"key": "auth.password",
			"value": "Q1w2e3r4!"
		}
	]
}